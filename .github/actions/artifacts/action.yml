name: 'Sentry Artifacts'
description: 'Handles uploading coverage/test artifacts to codecov'

inputs:
  files:
    description: 'Path to coverage file(s) - comma separated for multiple files'
    default: '.artifacts/*.coverage.xml'
    required: true
  test_result_files:
    description: 'Path to test result file(s) - comma separated for multiple files'
    default: '.artifacts/*.junit.xml'
    required: true
  type:
    description: 'The type of change (frontend, backend)'
    default: 'backend'
    required: false
  token:
    description: 'The codecov token'
    required: true
  commit_sha:
    description: 'The commit sha'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Download and Verify Codecov CLI
      shell: bash
      run: |
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
        curl -Os https://cli.codecov.io/latest/linux/codecov
        curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM
        curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM.sig
        gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        chmod +x codecov
    - name: Upload Coverage
      shell: bash
      continue-on-error: true
      run: |
        files=$(echo ${{ inputs.files }} | sed 's/^/--file /;s/,/ --file /')
        test_result_files=$(echo ${{ inputs.test_result_files }} | sed 's/^/--file /;s/,/ --file /')
        ./codecov --verbose upload-process -t ${{ inputs.token }} --commit-sha ${{ inputs.commit_sha }} --plugin noop --flag ${{ inputs.type }} $files &
        ./codecov --verbose do-upload --report-type test_results -t ${{ inputs.token }} --commit-sha ${{ inputs.commit_sha }} --plugin noop --flag ${{ inputs.type }} $test_result_files  &
        wait
